color = key)) +
geom_line() +
scale_x_reverse(labels = back_to_date, breaks = breaks) +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
manner_reverse_x
just_right
manner_reverse_x
ggsave("charts/relevance_1.png", relevance_1, dpi = "retina", height = 3.8, width = 6)
ggsave("charts/relevance_2.png", relevance_2, dpi = "retina", height = 3.8, width = 6)
relevance_1 <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("c", "d")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product")) +
scale_color_manual(values = c("darkgreen", "purple"))
relevance_2 <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
mutate(revenue = if_else(key == "b", value * 3.5, value * 2)) %>%
ggplot(aes(x = date,
y = revenue,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
legend.text = element_text(size = 13),
axis.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Revenue") +  guides(color = guide_legend(title = "Product"))
ggsave("charts/relevance_1.png", relevance_1, dpi = "retina", height = 3.8, width = 6)
ggsave("charts/relevance_2.png", relevance_2, dpi = "retina", height = 3.8, width = 6)
ggsave("charts/manner_reverse_x.png", manner_reverse_x, dpi = "retina", height = 3.8, width = 6)
grice_plot_saver(gg) {
name <- paste0("charts/timeline-", deparse(substitute(gg)), ".png")
ggsave(name, gg, dpi = "retina", height = 3.8, width = 6)
}
ggsave("charts/just_rightB.png", just_right, dpi = "retina", height = 3.8, width = 6)
grice_plot_saver(just_right)
grice_plot_saver(gg) {
name <- paste0("charts/timeline-", deparse(substitute(gg)), ".png")
ggsave(name, gg, dpi = "retina", height = 3.8, width = 6)
}
grice_plot_saver <- function(gg) {
name <- paste0("charts/timeline-", deparse(substitute(gg)), ".png")
ggsave(name, gg, dpi = "retina", height = 3.8, width = 6)
}
ggsave("charts/just_rightB.png", just_right, dpi = "retina", height = 3.8, width = 6)
grice_plot_saver(just_right)
quantity_too_little_series <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_series <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b", "c", "d", "e")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
grice_plot_saver(quantity_too_much_series)
grice_plot_saver(qauntity_too_little_series)
quantity_too_little_series <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_series <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b", "c", "d", "e")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
grice_plot_saver(qauntity_too_little_series)
quantity_too_little_series
grice_plot_saver(quantity_too_little_series)
grice_plot_saver(just_right)
grice_plot_saver(relevance_1)
grice_plot_saver(relevance_2)
grice_plot_saver <- function(gg) {
name <- paste0("charts/", deparse(substitute(gg)), ".png")
ggsave(name, gg, dpi = "retina", height = 3.8, width = 6)
}
grice_plot_saver(just_right)
grice_plot_saver(relevance_1)
grice_plot_saver(relevance_2)
grice_plot_saver(manner_reverse_x)
grice_plot_saver(quantity_too_much_series)
grice_plot_saver(quantity_too_little_series)
too_little_label <- just_right +
theme(axis.text = element_blank())
too_little_label
too_much_label <- just_right + ggrepel::geom_label_repel()
?ggrepel::geom_label_repel
too_much_label <- just_right + ggrepel::geom_label_repel(show.legend = FALSE,
segment.color = "gray")
grice_plot_saver(too_much_label)
too_much_label <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key,
label = round(value,2))) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +
guides(color = guide_legend(title = "Product")) +
ggrepel::geom_label_repel(show.legend = FALSE, segment.color = "gray")
grice_plot_saver(too_much_label)
too_much_label <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key,
label = round(value,2))) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +
guides(color = guide_legend(title = "Product")) +
ggrepel::geom_label_repel(show.legend = FALSE, segment.color = "gray", size = 3.5)
grice_plot_saver(too_much_label)
too_much_label <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key,
label = round(value,2))) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +
guides(color = guide_legend(title = "Product")) +
ggrepel::geom_label_repel(show.legend = FALSE, segment.color = "gray", size = 2.5)
grice_plot_saver(too_much_label)
quantity_too_much_agg <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
mutate(month = lubridate::floor_date(date, "month")) %>%
group_by(month, key) %>%
summarise(value = sum(value)) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = month,
y = value,
color = key)) +
geom_line() +
scale_x_date(breaks = c(as.Date("2018-10-01"), as.Date("2018-11-01")),
date_labels = "%B") +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_agg
z
quantity_too_little_agg <- series %>%
mutate(by = TRUE) %>%
left_join(hours) %>%
mutate(value = hour_value * value,
time_hour = date + lubridate::dhours(hour)) %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = times_hour,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_little_agg <- series %>%
mutate(by = TRUE) %>%
left_join(hours) %>%
mutate(value = hour_value * value,
time_hour = date + lubridate::dhours(hour)) %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = times_hour,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Hourly Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_agg <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
mutate(month = lubridate::floor_date(date, "month")) %>%
group_by(month, key) %>%
summarise(value = sum(value)) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = month,
y = value,
color = key)) +
geom_line() +
scale_x_date(breaks = c(as.Date("2018-10-01"), as.Date("2018-11-01")),
date_labels = "%B") +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Monthly Profit") +  guides(color = guide_legend(title = "Product"))
grice_plot_saver(quantity_too_little_label)
grice_plot_saver(quantity_too_much_label)
quantity_too_little_label <- just_right +
theme(axis.text = element_blank())
quantity_too_much_label <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key,
label = round(value,2))) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Daily Profit") +
guides(color = guide_legend(title = "Product")) +
ggrepel::geom_label_repel(show.legend = FALSE, segment.color = "gray", size = 2.5)
grice_plot_saver(quantity_too_little_label)
grice_plot_saver(quantity_too_much_label)
quantity_too_little_x <- series %>%
filter(date >= as.Date("2018-10-01"),
date <= as.Date("2018-10-25")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
geom_line()
quantity_too_little_x
quantity_too_little_x <- series %>%
filter(date >= as.Date("2018-10-01"),
date <= as.Date("2018-10-25")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
geom_line() +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
grice_plot_saver(quantity_too_much_x)
grice_plot_saver(quantity_too_little_x)
quantity_too_much_x <- series %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
geom_line() +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
grice_plot_saver(quantity_too_much_x)
series <- readr::read_csv("timeline-playground/series-Table 1.csv") %>%
tidyr::gather(key, value, -date)
quantity_too_much_x <- series %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
geom_line() +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
(quantity_too_much_x)
grice_plot_saver(quantity_too_much_x)
quantity_too_much_x <- series %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
scale_y_continuous(labels = scales::dollar) +
scale_x_date(format = "%b %d") +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
geom_line() +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_x <- series %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
scale_y_continuous(labels = scales::dollar) +
scale_x_date(date_format = "%b %d") +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
geom_line() +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_x <- series %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
scale_y_continuous(labels = scales::dollar) +
scale_x_date(date_format = "%b %d") +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
geom_line() +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
?scale_x_date
quantity_too_much_x <- series %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = date,
y = value,
color = key)) +
scale_y_continuous(labels = scales::dollar) +
scale_x_date(date_labels = "%b %d") +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
geom_line() +
ggtitle("FakeMart: Daily Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_x
grice_plot_saver(quantity_too_much_x)
hours <- readr::read_csv("timeline-playground/hours-Table 1.csv") %>%
mutate(by = TRUE)
quantity_too_little_agg <- series %>%
mutate(by = TRUE) %>%
left_join(hours) %>%
mutate(value = hour_value * value,
time_hour = date + lubridate::dhours(hour)) %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = times_hour,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Hourly Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_agg <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
mutate(month = lubridate::floor_date(date, "month")) %>%
group_by(month, key) %>%
summarise(value = sum(value)) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = month,
y = value,
color = key)) +
geom_line() +
scale_x_date(breaks = c(as.Date("2018-10-01"), as.Date("2018-11-01")),
date_labels = "%B") +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Monthly Profit") +  guides(color = guide_legend(title = "Product"))
grice_plot_saver(too_little_agg)
grice_plot_saver(too_much_agg)
hours <- readr::read_csv("timeline-playground/hours-Table 1.csv") %>%
mutate(by = TRUE)
quantity_too_little_agg <- series %>%
mutate(by = TRUE) %>%
left_join(hours) %>%
mutate(value = hour_value * value,
time_hour = date + lubridate::dhours(hour)) %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = times_hour,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Hourly Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_agg <- series %>%
filter(date >= as.Date("2018-10-01")) %>%
mutate(month = lubridate::floor_date(date, "month")) %>%
group_by(month, key) %>%
summarise(value = sum(value)) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = month,
y = value,
color = key)) +
geom_line() +
scale_x_date(breaks = c(as.Date("2018-10-01"), as.Date("2018-11-01")),
date_labels = "%B") +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Monthly Profit") +  guides(color = guide_legend(title = "Product"))
quantity_too_much_agg
quantity_too_little_agg
quantity_too_little_agg <- series %>%
mutate(by = TRUE) %>%
left_join(hours) %>%
mutate(value = hour_value * value,
time_hour = date + lubridate::dhours(hour)) %>%
filter(date >= as.Date("2018-10-01")) %>%
filter(key %in% c("a", "b")) %>%
ggplot(aes(x = time_hour,
y = value,
color = key)) +
geom_line() +
scale_y_continuous(labels = scales::dollar) +
theme(axis.title = element_blank(),
axis.text = element_text(size = 13),
legend.text = element_text(size = 13),
plot.title = element_text(size = 22)) +
ggtitle("FakeMart: Hourly Profit") +  guides(color = guide_legend(title = "Product"))
grice_plot_saver(too_little_agg)
grice_plot_saver(too_much_agg)
grice_plot_saver(quantity_too_much_agg)
grice_plot_saver(quantity_too_little_agg)
grice_plot_saver(quantity_too_little_label)
grice_plot_saver(quantity_too_much_label)
# Make the timeline plots:
# charts for timeline.
source("timeline.R")
source("just_right_chart.R")
source("relevance.R")
source("manner.R")
source("quantity.R")
# save the plots
source("plot_saver.R")
source("quantity-aggregation.R")
source("quantity.R")
# save the plots.  .png files are in .gitignore
source("plot_saver.R")
